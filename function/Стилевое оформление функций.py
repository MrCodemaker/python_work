"""
Стилевое оформление функций В стилевом оформлении функций необходимо учитывать
некоторые подробности. Функции должны иметь содержательные имена,
состоящие из букв нижнего регистра и символов подчеркивания. Содержательные
имена помогают вам и другим разработчикам понять, что же делает ваш код.
Эти соглашения следует соблюдать и в именах модулей. Каждая функция должна
быть снабжена комментарием, который кратко поясняет, что же делает эта функция.
Комментарий должен следовать сразу же за определением функции в формате строк
документации. Если функция хорошо документирована, другие разработчики смогут
использовать ее, прочитав только описание. Конечно, для этого они должны
доверять тому, что код работает в соответствии с описанием, — но, если знать
имя функции, какие аргументы ей нужны и какое значение она возвращает,
они смогут использовать ее в своих программах. Если для параметра задается
значение по умолчанию, слева и справа от знака равенства не должно
быть пробелов:

def имя_функции(параметр_0, параметр_1='значение_по_умолчанию')

Те же соглашения должны применяться для именованных аргументов
в вызовах функций:

имя_функции(значение_0, параметр_1='значение')

Документ PEP 8 (https://www.python.org/dev/peps/pep-0008/) рекомендует
ограничить длину строк кода 79 символами, чтобы строки были полностью видны
в окне редактора нормального размера. Если из-за параметров длина определения
функции превышает 79 символов, нажмите Enter после открывающей круглой скобки
в строке определения. В следующей строке дважды нажмите Tab, чтобы отделить
список аргументов от тела функции, которое должно быть снабжено отступом
только на один уровень. Многие редакторы автоматически выравнивают
дополнительные строки параметров по отступам, установленным в первой строке:

def имя_функции(
        параметр_0, параметр_1, параметр_2,
        параметр_3, параметр_4, параметр_5):
    тело функции...

Если программа или модуль состоит из нескольких функций, эти функции можно
разделить двумя пустыми строками. Так вам будет проще увидеть, где кончается
одна функция и начинается другая. Все команды import следует записывать в
начале файла. У этого правила есть только одно исключение: файл может
начинаться с комментариев, описывающих программу в целом.
"""
